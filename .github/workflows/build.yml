name: Build
on: [push]

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      # Instalar e verificar Git primeiro
      - name: Install and verify Git
        run: |
          which git || (sudo apt-get update && sudo apt-get install -y git)
          git --version
          echo "Git installation path: $(which git)"
          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "GIT_EXECUTABLE=$(which git)" >> $GITHUB_ENV
      
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade Cython==0.29.33
          pip install --upgrade buildozer==1.5.0
          pip install --upgrade virtualenv
          pip install --upgrade wheel
          pip install --upgrade setuptools

      # Modificado para incluir o caminho do Git explicitamente
      - name: Install system dependencies
        env:
          PATH: ${{ env.PATH }}:/usr/bin:/usr/local/bin
        run: |
          echo "Current PATH: $PATH"
          echo "Git location: $(which git)"
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            autoconf \
            automake \
            libtool \
            pkg-config \
            libltdl-dev \
            libffi-dev \
            libssl-dev \
            ccache \
            cmake

      - name: Configure ccache
        run: |
          sudo /usr/sbin/update-ccache-symlinks
          echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc

      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      - name: Clean and prepare environment
        run: |
          rm -rf ~/.buildozer
          rm -rf .buildozer
          rm -rf bin
          export PATH=$PATH:~/.local/bin/:/usr/bin
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export ANDROID_NDK_HOME=/usr/local/lib/android/sdk/ndk/25.2.9519653

      - name: Download Android SDK Command-line tools
        run: |
          mkdir -p $ANDROID_HOME/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip commandlinetools-linux-9477386_latest.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          rm commandlinetools-linux-9477386_latest.zip

      - name: Accept Android SDK licenses
        run: |
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-33" "build-tools;33.0.0" "ndk;25.2.9519653"

      # Modificado para incluir o caminho do Git explicitamente
      - name: Build with Buildozer
        env:
          BUILDOZER_WARN_ON_ROOT: 0
          ANDROID_HOME: /usr/local/lib/android/sdk
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
          PATH: ${{ env.PATH }}:/usr/bin:/usr/local/bin:~/.local/bin/
          PYTHONPATH: ${{ env.PYTHONPATH }}:${{ github.workspace }}
          GIT_EXECUTABLE: ${{ env.GIT_EXECUTABLE }}
        run: |
          echo "Current PATH: $PATH"
          echo "Git location: $(which git)"
          python -m buildozer android debug

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: bin/*.apk
          if-no-files-found: error
          retention-days: 90

      - name: Upload Logs (if build fails)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-logs
          path: |
            .buildozer/android/platform/build-*/build/other_builds/*/android/*/build/outputs/logs/*
            .buildozer/android/platform/build-*/build/other_builds/*/android/*/build/outputs/apk/debug/*
            .buildozer/android/app/buildozer.log
          retention-days: 30
