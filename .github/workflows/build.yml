name: Build Kivy Android APK

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-android:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git python3-pip build-essential python3-dev \
            ffmpeg libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev \
            libportmidi-dev libswscale-dev libavformat-dev libavcodec-dev zlib1g-dev \
            libgstreamer1.0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
            autoconf automake libtool pkg-config libltdl-dev libffi-dev libssl-dev \
            cmake unzip wget coreutils

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade \
            Cython==0.29.33 \
            buildozer==1.5.0 \
            "sh>=2,<3" \
            git+https://github.com/kivy/python-for-android.git@develop

      - name: Configure Android SDK
        run: |
          ANDROID_HOME="/usr/local/lib/android/sdk"
          echo "ANDROID_HOME=${ANDROID_HOME}" >> $GITHUB_ENV
          
          # Configura o PATH corretamente
          echo "${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools" >> $GITHUB_PATH
          export PATH="${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:$PATH"
          
          # Cria symlink necessário para o Buildozer
          sudo mkdir -p ${ANDROID_HOME}/tools/bin
          sudo ln -sf ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager ${ANDROID_HOME}/tools/bin/sdkmanager
          sudo ln -sf ${ANDROID_HOME}/cmdline-tools/latest/bin/avdmanager ${ANDROID_HOME}/tools/bin/avdmanager
          
          # Verifica instalação
          echo "Verificando instalação do SDK..."
          ls -la ${ANDROID_HOME}/cmdline-tools/latest/bin/
          which sdkmanager || echo "sdkmanager não encontrado"
          
          # Aceita licenças e instala componentes
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;33.0.0" "ndk;25.2.9519653"
          
          echo "ANDROID_NDK_HOME=${ANDROID_HOME}/ndk/25.2.9519653" >> $GITHUB_ENV

      - name: Prepare Build Environment
        run: |
          mkdir -p ~/.buildozer
          chmod -R 777 ~/.buildozer
          if [ ! -f buildozer.spec ]; then
            buildozer init
          fi

      - name: Build APK with Buildozer
        env:
          SHELL: /bin/bash
          MAKEFLAGS: -j1
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_NDK_HOME: ${{ env.ANDROID_NDK_HOME }}
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
          PATH: /usr/local/lib/android/sdk/cmdline-tools/latest/bin:/usr/local/lib/android/sdk/platform-tools:/usr/bin:/bin:/usr/sbin:/sbin
        run: |
          set -x
          # Limpa builds anteriores
          rm -rf .buildozer/android/platform/build-*
          
          # Força a localização correta do sdkmanager
          export SDKMANAGER=${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager
          echo "Usando sdkmanager em: ${SDKMANAGER}"
          
          # Executa o build
          buildozer --verbose android debug 2>&1 | tee build.log
          
          # Verifica se o APK foi gerado
          APK_PATH=$(find .buildozer -name "*.apk" | head -1)
          if [ -z "$APK_PATH" ]; then
            echo "Falha ao gerar APK. Logs:"
            cat build.log
            find .buildozer -name "*.log" -exec cat {} \;
            exit 1
          else
            echo "APK gerado com sucesso em: ${APK_PATH}"
            ls -la $(dirname ${APK_PATH})
          fi

      - name: Upload APK Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: .buildozer/android/platform/build-*/build/outputs/apk/debug/*.apk
          retention-days: 7

      - name: Upload Build Logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-logs
          path: |
            build.log
            .buildozer/android/app/buildozer.log
          retention-days: 3
