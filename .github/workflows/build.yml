name: Build
on: [push]

jobs:
  build-android:
    name: Build Android APK
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Git
        run: |
          sudo apt-get update
          sudo apt-get install -y git
          git --version
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade Cython==0.29.33
          pip install --upgrade buildozer==1.5.0
          pip install --upgrade virtualenv
          pip install --upgrade wheel
          pip install --upgrade setuptools

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            python3-pip \
            build-essential \
            python3 \
            python3-dev \
            ffmpeg \
            libsdl2-dev \
            libsdl2-image-dev \
            libsdl2-mixer-dev \
            libsdl2-ttf-dev \
            libportmidi-dev \
            libswscale-dev \
            libavformat-dev \
            libavcodec-dev \
            zlib1g-dev \
            libgstreamer1.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            autoconf \
            automake \
            libtool \
            pkg-config \
            libltdl-dev \
            libffi-dev \
            libssl-dev \
            ccache \
            cmake

      - name: Configure ccache
        run: |
          sudo /usr/sbin/update-ccache-symlinks
          echo 'export PATH="/usr/lib/ccache:$PATH"' | tee -a ~/.bashrc

      - name: Set up Android SDK
        run: |
          mkdir -p ${ANDROID_HOME}/cmdline-tools
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip
          unzip -q commandlinetools-linux-9477386_latest.zip -d ${ANDROID_HOME}/cmdline-tools
          mv ${ANDROID_HOME}/cmdline-tools/cmdline-tools ${ANDROID_HOME}/cmdline-tools/latest
          rm commandlinetools-linux-9477386_latest.zip
          echo "ANDROID_HOME=${ANDROID_HOME}" >> $GITHUB_ENV
          echo "PATH=${PATH}:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools" >> $GITHUB_ENV

      - name: Install Android SDK packages
        run: |
          yes | ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager --update
          ${ANDROID_HOME}/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.0" \
            "ndk;25.2.9519653" \
            "cmake;3.22.1"

      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      - name: Clean build directories
        run: |
          rm -rf ~/.buildozer
          rm -rf .buildozer
          rm -rf bin
          mkdir -p ~/.buildozer
          mkdir -p .buildozer
          mkdir -p bin

      - name: Update buildozer.spec
        run: |
          echo "android.sdk_path = ${ANDROID_HOME}" >> buildozer.spec
          echo "android.ndk_path = ${ANDROID_HOME}/ndk/25.2.9519653" >> buildozer.spec

      - name: Build with Buildozer
        env:
          BUILDOZER_WARN_ON_ROOT: 0
          ANDROID_HOME: /usr/local/lib/android/sdk
          ANDROID_NDK_HOME: /usr/local/lib/android/sdk/ndk/25.2.9519653
          JAVA_HOME: /usr/lib/jvm/temurin-17-jdk-amd64
          PATH: ${{ env.PATH }}:${ANDROID_HOME}/cmdline-tools/latest/bin:${ANDROID_HOME}/platform-tools:~/.local/bin/
          PYTHONPATH: ${{ env.PYTHONPATH }}:${{ github.workspace }}
        run: |
          ls -la ${ANDROID_HOME}/cmdline-tools/latest/bin/
          python -m buildozer android debug

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: bin/*.apk
          if-no-files-found: error
          retention-days: 90

      - name: Upload Build Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: buildozer-logs
          path: |
            .buildozer/android/platform/build-*/build/other_builds/*/android/*/build/outputs/logs/*
            .buildozer/android/platform/build-*/build/other_builds/*/android/*/build/outputs/apk/debug/*
            .buildozer/android/app/buildozer.log
          retention-days: 30
